1. 웹 소켓 라이브러리 설치
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

2. 서버 소켓과 통신하는 매핑 주소 만들기
    @Configuration
    @EnableWebSocket
    1. implements WebSocketConfigurer
    2. 오른쪽 클릭 -> 생성 -> 메소드 재정의/오버라이딩
    3. registerWebSocketHandlers : 서버소켓 매핑 주소 와 접근제한 주소 제공

        public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {
            registry.addHandler( 서버소켓객체 , "/chat" );
        }

3. 서버 소켓 클래스/객체 만들기
    @Component
    1. extends TextWebSocketHandler 상속받기
    2. 오른쪽 클릭 -> 생성 -> 메소드 재정의/오버라이딩

        1. afterConnectionEstablished : 클라이언트소켓과 접속성공 했을때 이후 메소드
        1. handleTransportError : 클라이언트소켓과 접속성공 했을때 이후 메소드
        1. afterConnectionClosed : 클라이언트소켓과 접속성공 했을때 이후 메소드
        1. handleTextMessage : 클라이언트소켓과 접속성공 했을때 이후 메소드






 ================== JS(react) 클라이언트 측 소켓 ===================

1. 클라이언트 생성 (* 생성과 동시에 서버소켓과 연결)
    new WebSocket ("ws://서버주소/서버소켓매핑주소")

2. 클라이언트소켓 메소드 오버라이딩
    클라이언트소켓.onopen = 메소드정의
    클라이언트소켓.onerror = 메소드정의
    클라이언트소켓.onclose = 메소드정의
    클라이언트소켓.onmessage = 메소드정의

3. 클라이언트소켓이 서버소켓으로부터 메세지 보낼때
    클라이언트소켓.send()
